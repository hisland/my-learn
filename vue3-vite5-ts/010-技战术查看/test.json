{
  "code": "0",
  "messages": [],
  "extras": {},
  "data": [
    {
      "attCkId": "TA0043",
      "attCkName": "侦察",
      "attCkOrderNo": 1,
      "technology": [
        {
          "attCkId": "T1595",
          "attCkName": "主动扫描",
          "attCkOrderNo": 1,
          "attCkDescription": "\n对手可能会执行主动侦察扫描，以收集可用于定位的信息。主动扫描是指对手通过网络流量探测受害者基础设施，而不是其他不涉及直接交互的侦察形式。\n\n对手可能根据其想要收集的信息执行不同形式的主动扫描。这些扫描可以通过多种方式进行，包括使用网络协议的本机功能，如ICMP。来自这些扫描的信息可能会揭示其他侦察形式的机会（例如：搜索开放网站/域名或搜索开放技术数据库）、建立操作资源（例如：发展能力或获取能力），和/或初始访问（例如：外部远程服务或利用面向公众的应用程序）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过启用入侵检测系统（IDS）和入侵防御系统（IPS），实时监控网络流量，检测并阻止攻击者的主动扫描行为（如端口扫描、漏洞扫描等）。这些系统能够分析异常流量模式，并对典型的扫描行为发出警报或直接阻断。"
        },
        {
          "attCkId": "T1590",
          "attCkName": "收集受害者网络信息",
          "attCkOrderNo": 3,
          "attCkDescription": "对手可能会收集有关受害者网络的信息，以便在定位时使用。这些网络信息可能包括多种细节，如管理数据（例如：IP范围、域名等）以及网络拓扑和操作的具体信息。\n\n对手可以通过多种方式收集这些信息，例如通过主动扫描的直接收集行动或钓鱼信息。网络信息也可能通过在线或其他可访问的数据集暴露给对手（例如：搜索开放技术数据库）。收集这些信息可能会揭示其他侦察形式的机会（例如：主动扫描或搜索开放网站/域名）、建立操作资源（例如：获取基础设施或入侵基础设施），和/或初始访问（例如：信任关系）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过实施网络访问控制（NAC）和网络分段，限制攻击者对受害者网络信息的收集。使用基于角色的访问控制（RBAC）和网络分段技术，将网络流量分隔在不同的子网或安全区域中，防止攻击者从一个受感染的区域扩展到整个网络。"
        },
        {
          "attCkId": "T1592",
          "attCkName": "收集受害者主机信息",
          "attCkOrderNo": 4,
          "attCkDescription": "对手可能会收集有关受害者主机的信息，以便在定位时使用。这些主机信息可能包括多种细节，如管理数据（例如：名称、分配的IP、功能等）以及配置的具体信息（例如：操作系统、语言等）。\n\n对手可以通过多种方式收集这些信息，例如通过主动扫描的直接收集行动或钓鱼信息。对手还可能入侵网站，嵌入旨在从访客处收集主机信息的恶意内容。主机信息也可能通过在线或其他可访问的数据集暴露给对手（例如：社交媒体或搜索受害者拥有的网站）。收集这些信息可能会揭示其他侦察形式的机会（例如：搜索开放网站/域名或搜索开放技术数据库）、建立操作资源（例如：发展能力或获取能力），和/或初始访问（例如：供应链入侵或外部远程服务）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "定期对主机和操作系统进行安全更新，修补已知漏洞，防止攻击者利用系统漏洞进行信息收集。同时，通过硬化系统配置，禁用不必要的服务和端口，减少暴露的主机信息。"
        },
        {
          "attCkId": "T1593",
          "attCkName": "搜索开放网站/域",
          "attCkOrderNo": 5,
          "attCkDescription": "对手可能会搜索自由可用的网站和/或域名，以获取关于受害者的信息，这些信息可用于定位。有关受害者的信息可能在各种在线网站上可用，例如社交媒体、新闻网站或提供商业运营信息的网站，如招聘或请求/奖励合同的信息。\n\n对手可能会根据他们想要收集的信息，在不同的在线网站中进行搜索。这些来源的信息可能会揭示其他侦察形式的机会（例如：钓鱼信息或搜索开放技术数据库）、建立操作资源（例如：建立账户或入侵账户），和/或初始访问（例如：外部远程服务或钓鱼）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过启用域名隐私保护（如WHOIS隐私保护服务），防止攻击者通过公开查询获取域名注册人的身份、联系信息和组织详情。确保在域名注册时使用隐私保护服务，以减少暴露的敏感信息。"
        },
        {
          "attCkId": "T1589",
          "attCkName": "收集受害者身份资料",
          "attCkOrderNo": 29,
          "attCkDescription": "对手可能会收集关于受害者身份的信息，以便在针对性攻击中使用。这些身份信息可能包括多种细节，例如个人数据（如员工姓名、电子邮件地址、安全问题的答案等），以及敏感信息，例如凭据或多因素身份验证（MFA）配置。\n\n对手可以通过多种方式收集这些信息，例如通过钓鱼信息直接引导受害者提供信息。用户信息也可以通过其他主动手段（如主动扫描）进行枚举，例如探测和分析身份验证服务的响应，这可能揭示系统中的有效用户名或与这些用户名相关的允许的MFA方法。受害者的信息还可能通过在线或其他可访问的数据集（如社交媒体或搜索受害者拥有的网站）向对手暴露。\n\n收集这些信息可能会揭示其他侦察形式的机会（如搜索开放网站/域名或钓鱼信息），建立操作资源（如账户被攻陷）和/或实现初始访问（如钓鱼或有效账户）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过强密码政策、多因素认证（MFA）、和身份验证手段来保护用户身份信息，防止攻击者获取未经授权的身份数据。确保所有用户的敏感身份信息（如个人身份信息、凭证等）在存储和传输时经过加密处理，防止信息泄露。"
        },
        {
          "attCkId": "T1591",
          "attCkName": "收集受害者组织信息",
          "attCkOrderNo": 30,
          "attCkDescription": "对手可能会收集有关受害者组织的信息，以便在针对性攻击中使用。这些信息可能包括部门名称、业务操作细节，以及关键员工的角色和职责。\n\n对手可以通过多种方式收集这些信息，例如通过钓鱼信息直接获取。组织的信息还可能通过在线或其他可访问的数据集（如社交媒体或搜索受害者拥有的网站）向对手暴露。收集这些信息可能揭示其他侦察形式的机会（如信息钓鱼或搜索开放网站/域名），建立操作资源（如建立账户或攻击账户），以及实现初始访问（如钓鱼或利用信任关系）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "定期审查并清理在线发布的组织相关信息，确保不会过度暴露组织的内部运作情况。使用威胁情报监控工具，及时发现针对组织信息的收集活动或潜在的攻击威胁，快速做出响应以减轻潜在风险。"
        },
        {
          "attCkId": "T1598",
          "attCkName": "通过网络钓鱼收集信息",
          "attCkOrderNo": 31,
          "attCkDescription": "对手可能会发送网络钓鱼消息，以引诱受害者泄露敏感信息，这些信息可以在目标攻击中使用。信息钓鱼旨在欺骗目标披露信息，通常是凭证或其他可操作的信息。信息钓鱼与网络钓鱼的不同之处在于，其目标是从受害者那里收集数据，而不是执行恶意代码。\n\n所有形式的钓鱼都是通过电子方式传递的社交工程。钓鱼可以是有针对性的，称为“定向钓鱼”。在定向钓鱼中，对手会针对特定个人、公司或行业进行攻击。更一般地，对手可以进行非定向钓鱼，例如大规模凭证收集活动。\n\n对手还可能通过电子邮件、即时消息或其他电子通信手段直接获取信息。受害者可能收到网络钓鱼消息，指示他们拨打电话号码，在那里对手试图收集机密信息。\n\n信息钓鱼通常涉及社交工程技术，例如伪装成有理由收集信息的来源（例如：建立账户或攻击账户）或发送多条看似紧急的消息。另一种实现方式是伪造或欺骗发件人的身份，这可以欺骗受害者和自动安全工具。\n\n信息钓鱼还可能涉及规避技术，例如从被攻击的账户中删除或篡改电子邮件或元数据/头部，以发送消息（例如：电子邮件隐藏规则）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过实施强大的电子邮件过滤系统，过滤和阻止带有恶意链接或附件的钓鱼电子邮件，防止攻击者利用社交工程技术诱骗员工泄露敏感信息。电子邮件网关可以自动识别和拦截恶意域名、可疑发送者地址以及具有恶意内容的电子邮件。"
        },
        {
          "attCkId": "T1597",
          "attCkName": "搜索闭源",
          "attCkOrderNo": 32,
          "attCkDescription": "对手可能会从封闭源搜索和收集受害者的信息，以便在目标攻击中使用。这些信息可能可以从信誉良好的私人来源和数据库中购买，例如付费订阅的技术/威胁情报数据。此外，对手也可能从不太可靠的来源，例如暗网或网络犯罪黑市，购买信息。\n\n对手可能会根据所需信息的类型在不同的封闭数据库中进行搜索。这些来源的信息可能会揭示其他侦察形式的机会（例如：信息钓鱼或搜索开放网站/域名）、建立操作资源（例如：发展能力或获取能力），以及初始访问（例如：外部远程服务或有效账户）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "结合实时监控工具，跟踪并记录所有访问闭源信息的行为，检测异常的查询或下载操作。通过日志审查，及时发现潜在的威胁并快速响应。此外，定期对闭源系统进行安全审计和漏洞扫描，确保系统的安全配置不易被攻击者利用。"
        },
        {
          "attCkId": "T1596",
          "attCkName": "搜索开放技术数据库",
          "attCkOrderNo": 33,
          "attCkDescription": "对手可能会搜索自由可用的技术数据库，以获取可以在目标攻击中使用的受害者信息。这些信息可能存在于在线数据库和存储库中，例如域名/证书的注册，以及从网络流量和/或扫描中收集的公共网络数据/文档。\n\n对手可能会根据所需信息的类型在不同的开放数据库中进行搜索。这些来源的信息可能会揭示其他侦察形式的机会（例如：信息钓鱼或搜索开放网站/域名）、建立操作资源（例如：获取基础设施或破坏基础设施），以及初始访问（例如：外部远程服务或可信关系）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过实施严格的访问控制，限制公开技术数据库中的敏感信息访问，防止攻击者通过搜索公开数据库获取有价值的技术信息。确保只有授权用户能够访问涉及组织内部架构、技术配置、或关键资源的技术文档和数据库。"
        }
      ]
    },
    {
      "attCkId": "TA0042",
      "attCkName": "资源开发",
      "attCkOrderNo": 2,
      "technology": [
        {
          "attCkId": "T1584",
          "attCkName": "折衷基础架构",
          "attCkOrderNo": 10,
          "attCkDescription": "对手可能会妥协第三方基础设施，以便在定位时使用。基础设施解决方案包括物理或云服务器、域名、网络设备以及第三方网站和DNS服务。与其购买、租赁或租用基础设施，对手可能会妥协这些基础设施，并在对手生命周期的其他阶段使用它们。此外，对手还可能妥协多个机器以形成可以利用的僵尸网络。\n\n使用妥协的基础设施使对手能够进行操作的 staging、启动和执行。妥协的基础设施可以帮助对手的操作与被视为正常的流量融合，例如与高声誉或可信网站的联系。例如，对手可能会利用妥协的基础设施（可能还结合数字证书）进一步融入，并支持信息收集和/或钓鱼活动。此外，对手也可能妥协基础设施以支持代理和/或代理软件服务。\n\n通过使用妥协的基础设施，对手可能使得追踪其行为变得困难。在定位之前，对手可能会妥协其他对手的基础设施。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "启用全面的日志记录和实时监控，及时发现并响应基础设施中的可疑活动或入侵尝试。使用入侵检测和预防系统（IDS/IPS）以及端点检测与响应（EDR/XDR）工具，监控基础设施的网络和系统行为，检测异常流量或恶意行为。"
        },
        {
          "attCkId": "T1585",
          "attCkName": "建立账户",
          "attCkOrderNo": 39,
          "attCkDescription": "对手可能会创建和培养与服务相关的账户，以便在目标定位中使用。对手可以创建账户，用于构建个人形象，以进一步开展操作。个人形象的发展包括公开信息、存在感、历史和适当的关系的建立。这种发展可以应用于社交媒体、网站或其他公开可用的信息，这些信息可能在使用该个人形象或身份的操作过程中被引用和审查其合法性。\n\n在包含社交工程的操作中，利用在线个人形象可能非常重要。这些个人形象可以是虚构的，或者模仿真实的人。个人形象可以在单个网站上存在，也可以跨多个网站存在（例如：Facebook、LinkedIn、Twitter、Google、GitHub、Docker Hub等）。建立个人形象可能需要开发额外的文档，使其看起来真实。这可能包括填写个人资料信息、建立社交网络或整合照片。\n\n建立账户还可以包括在电子邮件提供商处创建账户，这些账户可以直接用于信息钓鱼或钓鱼。此外，建立账户还可能使对手能够滥用免费服务，例如注册试用期，以恶意目的获取基础设施。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "定期审查系统中的账户列表，及时删除未使用或过期的账户。结合日志记录和审计功能，监控所有账户创建活动，检测异常的账户建立尝试，并快速响应可疑行为。此外，通过自动化的账户管理工具，确保每个账户的权限设置符合最小权限原则。"
        },
        {
          "attCkId": "T1608",
          "attCkName": "舞台功能",
          "attCkOrderNo": 42,
          "attCkDescription": "对手可能会上传、安装或以其他方式设置可用于目标的能力。为了支持他们的操作，对手可能需要将自己开发（开发能力）或获取（获取能力）的能力部署到他们控制的基础设施上。这些能力可以被部署在对手之前购买/租用的基础设施上（获取基础设施）或其他方式被他们攻陷的基础设施上（攻陷基础设施）。能力也可以部署在网络服务上，如 GitHub 或 Pastebin，或在能够轻松配置应用程序的服务平台（PaaS）上。\n\n能力的部署可以帮助对手在多个初始访问和后续渗透行为中，包括但不限于：\n\n部署在用户浏览某个网站时进行驱动攻击所需的网络资源。\n部署用于钓鱼攻击的链接目标的网络资源。\n将恶意软件或工具上传到可以被受害者网络访问的位置，以便进行工具传输。\n安装之前获取的 SSL/TLS 证书，以加密命令和控制流量（例如，通过网络协议的非对称加密）。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过应用程序白名单（Application Whitelisting）或基于签名的执行控制，确保系统只运行经过认证的应用程序和代码，防止攻击者在目标系统中部署恶意工具或能力，从而减少攻击者在系统中部署恶意软件的机会。"
        }
      ]
    },
    {
      "attCkId": "TA0001",
      "attCkName": "初始访问",
      "attCkOrderNo": 3,
      "technology": [
        {
          "attCkId": "T1190",
          "attCkName": "利用互联网上应用程序的漏洞",
          "attCkOrderNo": 19,
          "attCkDescription": "对手可能会试图利用面向互联网的主机或系统中的弱点，来首次访问网络。这些弱点可以是软件漏洞、临时故障或配置错误。\n\n被利用的应用程序通常是网站或Web服务器，但也可能包括数据库（如SQL）、标准服务（如SMB或SSH）、网络设备管理协议（如SNMP和Smart Install）以及任何其他具有可公开访问的开放套接字的系统。根据被利用的缺陷，这也可能涉及防御规避或客户端执行的利用。\n\n如果应用程序托管在云基础设施上或是容器化的，那么对其进行利用可能会导致对基础实例或容器的攻击。这可以为对手提供访问云或容器API的路径，通过逃逸到主机来利用容器主机访问，或利用弱身份和访问管理策略。\n\n对手还可能利用边缘网络基础设施和相关设备，特别是针对不支持强大主机防御的设备。\n\n对于网站和数据库，OWASP前10大和CWE前25大突出显示了最常见的基于Web的漏洞。",
          "defendId": "D3-NTF",
          "defendName": "Network Traffic Filtering",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1566",
          "attCkName": "网络钓鱼攻击",
          "attCkOrderNo": 34,
          "attCkDescription": "对手可能会发送网络钓鱼信息以获取受害者系统的访问权限。所有形式的网络钓鱼都是电子传播的社交工程。网络钓鱼可以是针对特定目标的，称为精准钓鱼。在精准钓鱼中，攻击者会针对特定个人、公司或行业。更广泛地说，攻击者也可以进行非针对性的网络钓鱼，例如大规模恶意软件垃圾邮件活动。\n\n攻击者可能会向受害者发送包含恶意附件或链接的电子邮件，通常用于在受害者系统上执行恶意代码。网络钓鱼还可能通过第三方服务（如社交媒体平台）进行，涉及社交工程技巧，如冒充可信来源，以及规避技术，例如从被滥用的帐户中删除或操纵电子邮件或元数据/标题（例如：电子邮件隐藏规则）。此外，攻击者可能伪造或欺骗发件人的身份，以迷惑人类收件人和自动安全工具。\n\n受害者还可能收到指示他们拨打电话的网络钓鱼信息，受害者被引导访问恶意网址、下载恶意软件，或在其计算机上安装对手可访问的远程管理工具（即用户执行）。",
          "defendId": "D3-ISVA",
          "defendName": "Inbound Session Volume Analysis",
          "defendExecutionDesc": "网络设备被配置为对通常涉及拒绝服务（DoS）攻击的特定数据包发出警报。典型的数据包包括ICMP数据包和常用于泛洪网络的SYN请求。采样周期用于定义一个时间窗口，在该窗口内可以测量所识别数据包的收集数量。如果收集到的数据包数量超过预定限制，则会生成警报。"
        },
        {
          "attCkId": "T1189",
          "attCkName": "偷渡式妥协",
          "attCkOrderNo": 36,
          "attCkDescription": "对手可能通过用户在正常浏览过程中访问网站来获取系统访问权限。这种技术通常以用户的网络浏览器为目标进行利用，但对手也可能使用被攻击的网站进行非利用行为，例如获取应用程序访问令牌。\n\n交付恶意代码到浏览器的方式有多种（例如，驱动访问），包括：\n\n合法网站被入侵，注入恶意代码，如JavaScript、iFrames和跨站脚本。\n从公开可写的云存储桶提供的脚本文件被修改。\n通过合法广告提供商支付并投放恶意广告（即恶意广告）。\n利用内置的Web应用程序接口插入其他类型的对象，以显示Web内容或包含在访问客户端上执行的脚本（例如论坛帖子、评论和其他用户可控的Web内容）。\n对手通常会选择特定社区访问的网站，例如政府、特定行业或区域，目标是针对共享兴趣的特定用户。这种针对性的攻击通常称为战略网络妥协或“饮水池攻击”。该过程通常包括用户访问控制内容的网站，自动执行脚本以搜索浏览器和插件的潜在漏洞版本，最终实现代码执行。\n\n此外，对手还可以利用被攻击的网站引导用户访问设计用于窃取应用程序访问令牌（如OAuth令牌）的恶意应用程序，从而获取对受保护应用程序和信息的访问权限。",
          "defendId": "D3-RTSD",
          "defendName": "Remote Terminal Session Detection",
          "defendExecutionDesc": "外部攻击者远程控制公司或组织网络内的主机，并手动指挥攻击技术。在此技术中，会分析非标准的终端会话和异常行为。异常行为检测包括对实时会话中的用户输入模式、键盘输出和数据包检查的分析。"
        },
        {
          "attCkId": "T1133",
          "attCkName": "外部远程服务",
          "attCkOrderNo": 43,
          "attCkDescription": "对手可能会利用面向外部的远程服务来初步访问和/或在网络中保持持久性。诸如 VPN、Citrix 和其他访问机制的远程服务允许用户从外部位置连接到内部企业网络资源。这些服务通常有管理连接和凭据认证的网关。Windows 远程管理和 VNC 等服务也可以用于外部访问。\n\n使用这些服务通常需要有效账户的访问权限，这可以通过凭据诱骗或在攻陷企业网络后从用户那里获取凭据来获得。在操作期间，访问远程服务可能作为冗余或持久的访问机制。\n\n访问也可以通过不需要身份验证的暴露服务来获得。在容器化环境中，这可能包括暴露的 Docker API、Kubernetes API 服务器、kubelet 或 Web 应用程序，如 Kubernetes 仪表板。",
          "defendId": "D3-ANET",
          "defendName": "Authentication Event Thresholding",
          "defendExecutionDesc": "收集身份验证事件数据（如设备 ID、一天中的时间、星期几、地理位置等登录信息）以创建活动基线。然后，通过手动指定的配置或对历史数据偏差的统计分析来确定阈值。新的身份验证事件将被评估，以确定是否超过阈值。阈值可以是静态的或动态的。"
        },
        {
          "attCkId": "T1078",
          "attCkName": "有效凭证",
          "attCkOrderNo": 54,
          "attCkDescription": "对手可能会获取并滥用现有账户的凭据，以此作为获得初始访问权限、持久性、权限提升或规避防御的手段。被泄露的凭据可以用来绕过对网络内各种资源的访问控制，甚至可用于持久访问远程系统和外部可用服务，例如VPN、Outlook Web Access、网络设备和远程桌面。被泄露的凭据还可能赋予对特定系统的更高权限或访问网络限制区域的权限。对手可能会选择不使用恶意软件或工具，而是依靠这些凭据提供的合法访问，以减少被检测的可能性。\n\n在某些情况下，对手可能会滥用不活跃的账户，例如那些属于已不再组织内个人的账户。使用这些账户可能使对手逃避检测，因为原账户用户将无法识别其账户上的任何异常活动。\n\n本地、域和云账户在网络系统中权限的重叠也引发关注，因为对手可能能够在账户和系统之间进行转换，从而达到较高的访问级别（例如域或企业管理员），以绕过企业内部设置的访问控制。",
          "defendId": "D3-RAPA",
          "defendName": "Resource Access Pattern Analysis",
          "defendExecutionDesc": "这种技术通过将用户的资源访问最近活动与基线活动模型进行比较来分析用户的资源访问情况。如果当前活动与基线模型之间存在显著差异，并且这些差异足够严重，可能表明存在未经授权的活动。"
        }
      ]
    },
    {
      "attCkId": "TA0002",
      "attCkName": "执行",
      "attCkOrderNo": 4,
      "technology": [
        {
          "attCkId": "T1106",
          "attCkName": "原生接口",
          "attCkOrderNo": 8,
          "attCkDescription": "对手可能会与本地操作系统应用程序编程接口（API）交互，以执行特定行为。原生API提供了一种受控的方式来调用内核中的低级操作系统服务，例如涉及硬件/设备、内存和进程的服务。这些原生API在系统启动时（当其他系统组件尚未初始化时）以及在常规操作中执行任务和请求时由操作系统利用。\n\n对手可能滥用这些操作系统API函数来执行行为。类似于命令和脚本解释器，原生API及其接口层次结构提供了与受害系统的各种组件交互和利用的机制。\n\n原生API函数（如NtCreateProcess）可以通过系统调用直接调用，但这些功能通常也通过接口和库暴露给用户模式应用程序。例如，Windows API的CreateProcess()或GNU的fork()函数允许程序和脚本启动其他进程。这使得API调用者能够执行二进制文件、运行CLI命令、加载模块等，因为有成千上万类似的API函数可用于各种系统操作。\n\n更高级的软件框架，如Microsoft .NET和macOS Cocoa，也可用于与原生API交互。这些框架通常提供API功能的语言封装/抽象，并旨在便于使用和代码的可移植性。\n\n对手可能使用汇编语言直接或间接调用系统调用，试图绕过防御传感器和检测签名，例如用户模式API挂钩。对手还可能尝试篡改与API监控相关的传感器和防御工具，例如通过禁用或修改工具来卸载监控函数。",
          "defendId": "D3-SCA",
          "defendName": "System Call Analysis",
          "defendExecutionDesc": "系统调用是用户应用程序与操作系统之间的 API。通过分析进程对这些 API 的使用情况，在某些情况下，可以确定程序是否表现出未经授权的行为，包括试图提升其权限。"
        },
        {
          "attCkId": "T1203",
          "attCkName": "利用客户端漏洞获取执行权限",
          "attCkOrderNo": 21,
          "attCkDescription": "对手可能会利用客户端应用程序中的软件漏洞来执行代码。这些漏洞可能由于不安全的编码实践而存在，导致意想不到的行为。对手可以通过有针对性的利用特定漏洞来实现任意代码执行。通常，攻击工具包中最有价值的漏洞是那些能够在远程系统上获取代码执行权限的漏洞，因为它们可以用于访问该系统。用户通常会看到与他们常用应用程序相关的文件，因此这些应用程序是漏洞研究和开发的有用目标，因为它们的实用性很高。",
          "defendId": "D3-MBT",
          "defendName": "Memory Boundary Tracking",
          "defendExecutionDesc": "这种技术监控返回地址是否位于先前为某个对象（即函数、模块、进程或线程）分配的内存之外的指标。如果是这样，返回地址指向的代码将被视为恶意代码。"
        },
        {
          "attCkId": "T1204",
          "attCkName": "用户执行",
          "attCkOrderNo": 37,
          "attCkDescription": "对手可能依赖用户的特定行为以获取执行权限。用户可能会受到社会工程学的影响，被诱导执行恶意代码，例如打开恶意文档文件或链接。这些用户行为通常是在钓鱼攻击之后观察到的跟进行为。\n\n虽然用户执行通常发生在初始访问后不久，但也可能在入侵的其他阶段出现，例如当对手将文件放置在共享目录或用户桌面上，期望用户点击它。此活动还可能在内部钓鱼攻击之后不久出现。\n\n对手可能会欺骗用户执行一些操作，例如启用远程访问软件，从而允许对手直接控制系统；在浏览器中运行恶意JavaScript，从而使对手窃取Web会话Cookie；或者下载并执行恶意软件以实现用户执行。\n\n例如，技术支持骗局可以通过钓鱼、语音钓鱼或各种用户互动形式来促进。对手可以结合这些方法，例如伪造和推广免付费电话号码或呼叫中心，以引导受害者访问恶意网站，交付并执行包含恶意软件或远程访问软件的有效载荷。",
          "defendId": "D3-FEV",
          "defendName": "File Eviction",
          "defendExecutionDesc": "对手可能会将文件或程序放置在计算机的文件系统中以执行恶意操作。作为驱逐过程的一部分，应移除这些文件和程序，以防止进一步的妥协或重新感染。恶意文件的示例包括直接有害的恶意软件和旨在欺骗用户的内容文件（例如，网络钓鱼）。\n在 Windows 系统上，应该使用杀毒软件（AV）来安全且永久地移除恶意文件。AV 软件可能首先隔离疑似恶意文件，即将文件从其原始位置移动到新位置，并进行更改以使其无法执行。然后，用户可以验证该文件是否无害，并将其永久删除。"
        },
        {
          "attCkId": "T1059",
          "attCkName": "命令和脚本解释器",
          "attCkOrderNo": 48,
          "attCkDescription": "对手可能会滥用命令和脚本解释器来执行命令、脚本或二进制文件。这些接口和语言提供了与计算机系统交互的方式，通常是许多不同平台的常见特征。大多数系统都配有一些内置的命令行界面和脚本功能，例如，macOS 和 Linux 发行版包括某种 Unix Shell，而 Windows 安装则包括 Windows 命令提示符和 PowerShell。\n\n还有一些跨平台的解释器，如 Python，以及与客户端应用程序关联的常见语言，如 JavaScript 和 Visual Basic。\n\n对手可能以多种方式滥用这些技术来执行任意命令。命令和脚本可以嵌入到发送给受害者的初始访问有效载荷中，例如作为诱饵文档或从现有的命令和控制（C2）下载的次级有效载荷。对手还可以通过交互式终端/外壳执行命令，并利用各种远程服务来实现远程执行。",
          "defendId": "D3-LFP",
          "defendName": "Local File Permissions",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1053",
          "attCkName": "计划任务/作业",
          "attCkOrderNo": 53,
          "attCkDescription": "对手可能会滥用任务调度功能，以便初次或定期执行恶意代码。所有主要操作系统中都有工具可以在指定日期和时间调度程序或脚本的执行。只要满足适当的身份验证，就可以在远程系统上调度任务（例如，Windows 环境中的 RPC 和文件打印共享）。在远程系统上调度任务通常需要成为该系统上的管理员或其他特权组的成员。\n\n对手可以利用任务调度在系统启动时或定期执行程序，以实现持久性。这些机制也可以被滥用，以在指定账户的上下文中运行进程（例如，具有提升的权限）。类似于系统二进制代理执行，对手还可能滥用任务调度来潜在地掩盖在受信任的系统进程下的一次性执行。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        }
      ]
    },
    {
      "attCkId": "TA0003",
      "attCkName": "持久化",
      "attCkOrderNo": 5,
      "technology": [
        {
          "attCkId": "T1505",
          "attCkName": "服务器软件组件",
          "attCkOrderNo": 14,
          "attCkDescription": "对手可能滥用服务器的合法可扩展开发功能，以建立对系统的持久访问。企业服务器应用程序可能包括允许开发人员编写和安装软件或脚本以扩展主应用程序功能的特性。对手可能会安装恶意组件，以扩展和滥用服务器应用程序。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1037",
          "attCkName": "启动或登录初始化脚本",
          "attCkOrderNo": 38,
          "attCkDescription": "对手可能会利用在启动或登录初始化时自动执行的脚本来建立持久性。初始化脚本可以用于执行管理功能，通常会执行其他程序或将信息发送到内部日志服务器。这些脚本的具体形式可能因操作系统而异，并且可以是本地应用或远程应用。\n\n对手可以使用这些脚本在单个系统上保持持久性。根据登录脚本的访问配置，可能需要本地凭据或管理员帐户。\n\n此外，由于某些启动或登录初始化脚本以更高的权限运行，对手可能还能够提升其权限。",
          "defendId": "D3-FA",
          "defendName": "File Analysis",
          "defendExecutionDesc": "一些技术使用文件签名或文件元数据与历史恶意软件集合进行比较。文件也可以与如加密签名等真实来源进行比较。通过对文件内容或文件行为进行模式匹配，检查文件是否存在潜在的恶意软件。二进制代码可能会被反汇编并分析，以预测恶意软件行为，例如 API 调用签名。分析可能在受保护的环境中进行，如沙箱或实时系统中。"
        },
        {
          "attCkId": "T1136",
          "attCkName": "创建账户",
          "attCkOrderNo": 40,
          "attCkDescription": "对手可能会创建账户以维持对受害系统的访问。通过足够的访问权限，这些账户可以用于建立不需要持久远程访问工具的二级凭证访问。\n\n账户可以在本地系统、域或云租户中创建。在云环境中，对手可能会创建仅具有特定服务访问权限的账户，这样可以降低被检测的可能性。",
          "defendId": "D3-ULA",
          "defendName": "Unlock Account",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1574",
          "attCkName": "劫持执行流",
          "attCkOrderNo": 41,
          "attCkDescription": "对手可能通过劫持操作系统运行程序的方式来执行自己的恶意有效载荷。劫持执行流程可以用于持久性，因为这种劫持的执行可能会随着时间的推移而反复发生。\n\n对手可以通过多种方式劫持执行流程，包括操纵操作系统查找要执行的程序的方法。操作系统定位程序所需库的方式也可以被拦截。操作系统查找程序和资源的位置，如文件目录和 Windows 注册表，也可能被毒化以包括恶意有效载荷。",
          "defendId": "D3-EFA",
          "defendName": "Emulated File Analysis",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1133",
          "attCkName": "外部远程服务",
          "attCkOrderNo": 43,
          "attCkDescription": "对手可能会利用面向外部的远程服务来初步访问和/或在网络中保持持久性。诸如 VPN、Citrix 和其他访问机制的远程服务允许用户从外部位置连接到内部企业网络资源。这些服务通常有管理连接和凭据认证的网关。Windows 远程管理和 VNC 等服务也可以用于外部访问。\n\n使用这些服务通常需要有效账户的访问权限，这可以通过凭据诱骗或在攻陷企业网络后从用户那里获取凭据来获得。在操作期间，访问远程服务可能作为冗余或持久的访问机制。\n\n访问也可以通过不需要身份验证的暴露服务来获得。在容器化环境中，这可能包括暴露的 Docker API、Kubernetes API 服务器、kubelet 或 Web 应用程序，如 Kubernetes 仪表板。",
          "defendId": "D3-ANET",
          "defendName": "Authentication Event Thresholding",
          "defendExecutionDesc": "收集身份验证事件数据（如设备 ID、一天中的时间、星期几、地理位置等登录信息）以创建活动基线。然后，通过手动指定的配置或对历史数据偏差的统计分析来确定阈值。新的身份验证事件将被评估，以确定是否超过阈值。阈值可以是静态的或动态的。"
        },
        {
          "attCkId": "T1053",
          "attCkName": "计划任务/作业",
          "attCkOrderNo": 53,
          "attCkDescription": "对手可能会滥用任务调度功能，以便初次或定期执行恶意代码。所有主要操作系统中都有工具可以在指定日期和时间调度程序或脚本的执行。只要满足适当的身份验证，就可以在远程系统上调度任务（例如，Windows 环境中的 RPC 和文件打印共享）。在远程系统上调度任务通常需要成为该系统上的管理员或其他特权组的成员。\n\n对手可以利用任务调度在系统启动时或定期执行程序，以实现持久性。这些机制也可以被滥用，以在指定账户的上下文中运行进程（例如，具有提升的权限）。类似于系统二进制代理执行，对手还可能滥用任务调度来潜在地掩盖在受信任的系统进程下的一次性执行。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1078",
          "attCkName": "有效凭证",
          "attCkOrderNo": 54,
          "attCkDescription": "对手可能会获取并滥用现有账户的凭据，以此作为获得初始访问权限、持久性、权限提升或规避防御的手段。被泄露的凭据可以用来绕过对网络内各种资源的访问控制，甚至可用于持久访问远程系统和外部可用服务，例如VPN、Outlook Web Access、网络设备和远程桌面。被泄露的凭据还可能赋予对特定系统的更高权限或访问网络限制区域的权限。对手可能会选择不使用恶意软件或工具，而是依靠这些凭据提供的合法访问，以减少被检测的可能性。\n\n在某些情况下，对手可能会滥用不活跃的账户，例如那些属于已不再组织内个人的账户。使用这些账户可能使对手逃避检测，因为原账户用户将无法识别其账户上的任何异常活动。\n\n本地、域和云账户在网络系统中权限的重叠也引发关注，因为对手可能能够在账户和系统之间进行转换，从而达到较高的访问级别（例如域或企业管理员），以绕过企业内部设置的访问控制。",
          "defendId": "D3-RAPA",
          "defendName": "Resource Access Pattern Analysis",
          "defendExecutionDesc": "这种技术通过将用户的资源访问最近活动与基线活动模型进行比较来分析用户的资源访问情况。如果当前活动与基线模型之间存在显著差异，并且这些差异足够严重，可能表明存在未经授权的活动。"
        }
      ]
    },
    {
      "attCkId": "TA0004",
      "attCkName": "权限提升",
      "attCkOrderNo": 6,
      "technology": [
        {
          "attCkId": "T1055",
          "attCkName": "进程注入",
          "attCkOrderNo": 16,
          "attCkDescription": "对手可能会向进程中注入代码，以规避基于进程的防御并可能提升权限。进程注入是一种在另一个实时进程的地址空间中执行任意代码的方法。在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源，并可能获得提升的权限。通过进程注入执行的代码也可能规避安全产品的检测，因为执行被伪装在一个合法进程下。\n\n有多种不同的方法可以将代码注入进程中，其中许多方法滥用了合法功能。这些实现存在于每个主要操作系统中，但通常是特定于平台的。\n\n更复杂的示例可能会执行多个进程注入，以分割模块并进一步规避检测，利用命名管道或其他进程间通信（IPC）机制作为通信渠道。",
          "defendId": "D3-SCF",
          "defendName": "System Call Filtering",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1548",
          "attCkName": "滥用权限提升控制机制",
          "attCkOrderNo": 20,
          "attCkDescription": "对手可能会规避旨在控制权限提升的机制，以获得更高级别的权限。大多数现代系统包含原生的权限提升控制机制，旨在限制用户在机器上可以执行的操作。授权必须授予特定用户，以执行被视为高风险的任务。\n\n对手可以利用多种方法来利用内置的控制机制，从而在系统上提升权限。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1068",
          "attCkName": "利用漏洞进行权限升级",
          "attCkOrderNo": 22,
          "attCkDescription": "对手可能会利用软件漏洞来提升权限。当对手利用程序、服务或操作系统软件或内核中的编程错误执行其控制的代码时，就发生了软件漏洞的利用。安全机制（如权限级别）通常会阻碍对信息的访问和某些技术的使用，因此对手可能需要进行权限升级，包括利用软件漏洞来规避这些限制。\n\n在首次访问系统时，对手可能在低权限进程中操作，这会限制他们对系统某些资源的访问。漏洞通常存在于高权限下运行的操作系统组件和软件中，利用这些漏洞可以获得更高的访问权限。这可能使对手能够从无权限或用户级权限提升到SYSTEM或root权限，甚至从虚拟环境（如虚拟机或容器）移动到底层主机。对手还可能会将一个签名的脆弱驱动程序带入被攻陷的机器，以利用该漏洞在内核模式下执行代码，这个过程有时被称为“带上你自己的脆弱驱动程序”（BYOVD）。",
          "defendId": "D3-PCSV",
          "defendName": "Process Code Segment Verification",
          "defendExecutionDesc": "进程代码段是分配给特定进程的计算机内存中的可执行部分。进程代码段验证通过将进程代码段与某个预期值进行比较来实现验证。"
        },
        {
          "attCkId": "T1037",
          "attCkName": "启动或登录初始化脚本",
          "attCkOrderNo": 38,
          "attCkDescription": "对手可能会利用在启动或登录初始化时自动执行的脚本来建立持久性。初始化脚本可以用于执行管理功能，通常会执行其他程序或将信息发送到内部日志服务器。这些脚本的具体形式可能因操作系统而异，并且可以是本地应用或远程应用。\n\n对手可以使用这些脚本在单个系统上保持持久性。根据登录脚本的访问配置，可能需要本地凭据或管理员帐户。\n\n此外，由于某些启动或登录初始化脚本以更高的权限运行，对手可能还能够提升其权限。",
          "defendId": "D3-FA",
          "defendName": "File Analysis",
          "defendExecutionDesc": "一些技术使用文件签名或文件元数据与历史恶意软件集合进行比较。文件也可以与如加密签名等真实来源进行比较。通过对文件内容或文件行为进行模式匹配，检查文件是否存在潜在的恶意软件。二进制代码可能会被反汇编并分析，以预测恶意软件行为，例如 API 调用签名。分析可能在受保护的环境中进行，如沙箱或实时系统中。"
        },
        {
          "attCkId": "T1574",
          "attCkName": "劫持执行流",
          "attCkOrderNo": 41,
          "attCkDescription": "对手可能通过劫持操作系统运行程序的方式来执行自己的恶意有效载荷。劫持执行流程可以用于持久性，因为这种劫持的执行可能会随着时间的推移而反复发生。\n\n对手可以通过多种方式劫持执行流程，包括操纵操作系统查找要执行的程序的方法。操作系统定位程序所需库的方式也可以被拦截。操作系统查找程序和资源的位置，如文件目录和 Windows 注册表，也可能被毒化以包括恶意有效载荷。",
          "defendId": "D3-EFA",
          "defendName": "Emulated File Analysis",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1053",
          "attCkName": "计划任务/作业",
          "attCkOrderNo": 53,
          "attCkDescription": "对手可能会滥用任务调度功能，以便初次或定期执行恶意代码。所有主要操作系统中都有工具可以在指定日期和时间调度程序或脚本的执行。只要满足适当的身份验证，就可以在远程系统上调度任务（例如，Windows 环境中的 RPC 和文件打印共享）。在远程系统上调度任务通常需要成为该系统上的管理员或其他特权组的成员。\n\n对手可以利用任务调度在系统启动时或定期执行程序，以实现持久性。这些机制也可以被滥用，以在指定账户的上下文中运行进程（例如，具有提升的权限）。类似于系统二进制代理执行，对手还可能滥用任务调度来潜在地掩盖在受信任的系统进程下的一次性执行。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1078",
          "attCkName": "有效凭证",
          "attCkOrderNo": 54,
          "attCkDescription": "对手可能会获取并滥用现有账户的凭据，以此作为获得初始访问权限、持久性、权限提升或规避防御的手段。被泄露的凭据可以用来绕过对网络内各种资源的访问控制，甚至可用于持久访问远程系统和外部可用服务，例如VPN、Outlook Web Access、网络设备和远程桌面。被泄露的凭据还可能赋予对特定系统的更高权限或访问网络限制区域的权限。对手可能会选择不使用恶意软件或工具，而是依靠这些凭据提供的合法访问，以减少被检测的可能性。\n\n在某些情况下，对手可能会滥用不活跃的账户，例如那些属于已不再组织内个人的账户。使用这些账户可能使对手逃避检测，因为原账户用户将无法识别其账户上的任何异常活动。\n\n本地、域和云账户在网络系统中权限的重叠也引发关注，因为对手可能能够在账户和系统之间进行转换，从而达到较高的访问级别（例如域或企业管理员），以绕过企业内部设置的访问控制。",
          "defendId": "D3-RAPA",
          "defendName": "Resource Access Pattern Analysis",
          "defendExecutionDesc": "这种技术通过将用户的资源访问最近活动与基线活动模型进行比较来分析用户的资源访问情况。如果当前活动与基线模型之间存在显著差异，并且这些差异足够严重，可能表明存在未经授权的活动。"
        }
      ]
    },
    {
      "attCkId": "TA0005",
      "attCkName": "防御绕过",
      "attCkOrderNo": 7,
      "technology": [
        {
          "attCkId": "T1550",
          "attCkName": "使用备用身份验证材料",
          "attCkOrderNo": 12,
          "attCkDescription": "对手可能会使用替代认证材料，如密码哈希、Kerberos票证和应用程序访问令牌，以便在环境中横向移动并绕过正常的系统访问控制。\n\n认证过程通常需要有效的身份（例如用户名）以及一个或多个认证因素（例如密码、PIN、物理智能卡、令牌生成器等）。替代认证材料是在用户或应用程序成功通过提供有效身份和所需认证因素进行身份验证后，由系统合法生成的。替代认证材料也可能在身份创建过程中生成。\n\n缓存替代认证材料使系统能够验证身份已成功认证，而无需用户重新输入认证因素。由于替代认证必须由系统维护——无论是在内存中还是在磁盘上——因此可能面临通过凭证访问技术被盗的风险。通过窃取替代认证材料，对手能够绕过系统访问控制，认证系统而无需知道明文密码或任何额外的认证因素。",
          "defendId": "D3-DUC",
          "defendName": "Decoy User Credential",
          "defendExecutionDesc": "开发了一种检测分析，用于确定用户何时使用诱饵凭证。防御者可以监控或控制该用户的后续操作。\n凭证可能包括：\n        •        域用户名和密码\n        •        本地系统用户名和密码"
        },
        {
          "attCkId": "T1055",
          "attCkName": "进程注入",
          "attCkOrderNo": 16,
          "attCkDescription": "对手可能会向进程中注入代码，以规避基于进程的防御并可能提升权限。进程注入是一种在另一个实时进程的地址空间中执行任意代码的方法。在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源，并可能获得提升的权限。通过进程注入执行的代码也可能规避安全产品的检测，因为执行被伪装在一个合法进程下。\n\n有多种不同的方法可以将代码注入进程中，其中许多方法滥用了合法功能。这些实现存在于每个主要操作系统中，但通常是特定于平台的。\n\n更复杂的示例可能会执行多个进程注入，以分割模块并进一步规避检测，利用命名管道或其他进程间通信（IPC）机制作为通信渠道。",
          "defendId": "D3-SCF",
          "defendName": "System Call Filtering",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1221",
          "attCkName": "模板注入",
          "attCkOrderNo": 17,
          "attCkDescription": "对手可能会创建或修改用户文档模板中的引用，以隐蔽恶意代码或强制认证尝试。例如，Microsoft的Office Open XML（OOXML）规范定义了一种基于XML的Office文档格式（.docx、.xlsx、.pptx），以替代旧的二进制格式（.doc、.xls、.ppt）。OOXML文件被打包为ZIP档案，包含各种XML文件，这些文件被称为部分，包含共同定义文档渲染方式的属性。\n\n部分中的属性可能引用通过在线URL访问的共享公共资源。例如，模板属性可能引用一个文件，作为预格式化的文档蓝图，当文档加载时被获取。\n\n对手可能滥用这些模板来隐蔽恶意代码，该代码将在用户文档中执行。注入到文档中的模板引用可能使恶意载荷在文档加载时被获取和执行。这些文档可以通过钓鱼或污染共享内容等其他技术传递，并且可能规避静态检测，因为在恶意载荷被获取之前，没有典型的指示器（如VBA宏、脚本等）。在现实中曾见到使用模板注入加载包含漏洞的恶意代码的例子。\n\n对手还可能修改*.rtf文件中的模板控制字，以类似方式隐蔽并下载恶意代码。此合法控制字值旨在作为模板文件资源的文件目标，当*.rtf文件打开时检索并加载。然而，对手可能会更改现有*.rtf文件的字节，以插入一个模板控制字字段，包含恶意载荷的URL资源。\n\n该技术还可能通过注入SMB/HTTPS（或其他要求凭证的）URL并触发认证尝试来实现强制认证。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过严格的输入验证机制，防止攻击者在模板中注入恶意代码。确保所有用户输入经过严格的校验和清理，以阻止非法字符或代码注入到模板引擎中。使用白名单模式进行输入验证，确保只允许预期的格式和内容。"
        },
        {
          "attCkId": "T1548",
          "attCkName": "滥用权限提升控制机制",
          "attCkOrderNo": 20,
          "attCkDescription": "对手可能会规避旨在控制权限提升的机制，以获得更高级别的权限。大多数现代系统包含原生的权限提升控制机制，旨在限制用户在机器上可以执行的操作。授权必须授予特定用户，以执行被视为高风险的任务。\n\n对手可以利用多种方法来利用内置的控制机制，从而在系统上提升权限。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1553",
          "attCkName": "破坏安全控制",
          "attCkOrderNo": 23,
          "attCkDescription": "对手可能会削弱安全控制，阻止用户对不信任活动的警告或阻止不受信任程序的执行。操作系统和安全产品通常会包含机制来识别程序或网站的信任级别，例如，签名有效代码签名证书的程序可以运行，或者下载自互联网的程序会提示用户警告。\n\n对手可能会试图破坏这些信任机制，具体方法取决于他们想要破坏的机制。对手可能会进行文件和目录权限修改或修改注册表来支持这些控制的破坏。此外，对手也可能创建或窃取代码签名证书，以在目标系统上获取信任。",
          "defendId": "D3-RC",
          "defendName": "Restore Configuration",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1036",
          "attCkName": "伪装",
          "attCkOrderNo": 25,
          "attCkDescription": "对手可能会试图操纵其工件的特征，使其在用户和/或安全工具面前看起来合法或无害。这种伪装（Masquerading）发生在对象的名称或位置被操纵或滥用，以规避防御和观察。这可能包括操纵文件元数据、诱使用户误识别文件类型，以及使用合法的任务或服务名称。\n\n将可滥用的系统实用程序重命名以规避安全监控也是一种伪装形式。",
          "defendId": "D3-SCA",
          "defendName": "System Call Analysis",
          "defendExecutionDesc": "系统调用是用户应用程序与操作系统之间的 API。通过分析进程对这些 API 的使用情况，在某些情况下，可以确定程序是否表现出未经授权的行为，包括试图提升其权限。"
        },
        {
          "attCkId": "T1574",
          "attCkName": "劫持执行流",
          "attCkOrderNo": 41,
          "attCkDescription": "对手可能通过劫持操作系统运行程序的方式来执行自己的恶意有效载荷。劫持执行流程可以用于持久性，因为这种劫持的执行可能会随着时间的推移而反复发生。\n\n对手可以通过多种方式劫持执行流程，包括操纵操作系统查找要执行的程序的方法。操作系统定位程序所需库的方式也可以被拦截。操作系统查找程序和资源的位置，如文件目录和 Windows 注册表，也可能被毒化以包括恶意有效载荷。",
          "defendId": "D3-EFA",
          "defendName": "Emulated File Analysis",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1140",
          "attCkName": "反混淆/解码文件或信息",
          "attCkOrderNo": 50,
          "attCkDescription": "对手可能会使用混淆文件或信息来隐藏入侵的痕迹以防止分析。根据他们打算如何使用这些信息，可能需要单独的机制来解码或解混淆。实现这一点的方法包括恶意软件的内置功能或系统上存在的实用工具。\n\n例如，可以使用 certutil 解码隐藏在证书文件中的远程访问工具可执行文件。另一个例子是使用 Windows 的 copy /b 命令将二进制片段重新组装为恶意有效负载。\n\n有时，用户的操作可能是必需的，以便打开文件进行解混淆或解密，这通常是用户执行的一部分。用户也可能需要输入密码以打开由对手提供的受密码保护的压缩/加密文件。",
          "defendId": "D3-FIM",
          "defendName": "File Integrity Monitoring",
          "defendExecutionDesc": "Windows 和 Unix 系统中有许多工具可以监控系统中特定的文件，并在任何工件被创建、修改或删除时生成警报。它们通过将当前的工件与之前的快照进行比较来实现这一点。\nUnix 系统拥有一个名为 Tripwire 的文件完整性检查工具。Tripwire 首先初始化一个数据库，作为比较的基础，然后可以扫描系统，将当前文件系统的状态与初始基线数据库进行比较。此外，用户可以定义指定潜在违规的策略。\n在 Microsoft Azure 中，可以启用文件完整性监控，该功能可以跟踪特定文件和注册表键的创建、删除以及修改。"
        },
        {
          "attCkId": "T1078",
          "attCkName": "有效凭证",
          "attCkOrderNo": 54,
          "attCkDescription": "对手可能会获取并滥用现有账户的凭据，以此作为获得初始访问权限、持久性、权限提升或规避防御的手段。被泄露的凭据可以用来绕过对网络内各种资源的访问控制，甚至可用于持久访问远程系统和外部可用服务，例如VPN、Outlook Web Access、网络设备和远程桌面。被泄露的凭据还可能赋予对特定系统的更高权限或访问网络限制区域的权限。对手可能会选择不使用恶意软件或工具，而是依靠这些凭据提供的合法访问，以减少被检测的可能性。\n\n在某些情况下，对手可能会滥用不活跃的账户，例如那些属于已不再组织内个人的账户。使用这些账户可能使对手逃避检测，因为原账户用户将无法识别其账户上的任何异常活动。\n\n本地、域和云账户在网络系统中权限的重叠也引发关注，因为对手可能能够在账户和系统之间进行转换，从而达到较高的访问级别（例如域或企业管理员），以绕过企业内部设置的访问控制。",
          "defendId": "D3-RAPA",
          "defendName": "Resource Access Pattern Analysis",
          "defendExecutionDesc": "这种技术通过将用户的资源访问最近活动与基线活动模型进行比较来分析用户的资源访问情况。如果当前活动与基线模型之间存在显著差异，并且这些差异足够严重，可能表明存在未经授权的活动。"
        }
      ]
    },
    {
      "attCkId": "TA0006",
      "attCkName": "凭证访问",
      "attCkOrderNo": 8,
      "technology": [
        {
          "attCkId": "T1557",
          "attCkName": "中间人",
          "attCkOrderNo": 9,
          "attCkDescription": "对手可能会尝试通过中间人技术（AiTM）在两个或多个网络设备之间定位自己，以支持后续行为，如网络嗅探、传输数据篡改或重放攻击（凭证访问利用）。通过滥用能够确定网络流量流向的常见网络协议特性（如ARP、DNS、LLMNR等），对手可能迫使设备通过其控制的系统进行通信，从而收集信息或执行其他操作。\n\n例如，对手可能会操纵受害者的DNS设置，以便进行其他恶意活动，如阻止/重定向用户访问合法网站和/或推送额外的恶意软件。对手还可能操纵DNS并利用其位置以拦截用户凭证，包括访问令牌和会话Cookies。降级攻击也可以用来建立AiTM位置，例如通过协商不太安全的、已弃用或更弱的通信协议版本（SSL/TLS）或加密算法。\n\n对手还可以利用AiTM位置监控和/或修改流量，例如在传输数据篡改中。对手可以设置与AiTM相似的位置，以阻止流量流向适当的目的地，可能会削弱防御和/或支持网络拒绝服务攻击。",
          "defendId": "D3-CAA",
          "defendName": "Connection Attempt Analysis",
          "defendExecutionDesc": "通过多种方式进行连接尝试分析。"
        },
        {
          "attCkId": "T1558",
          "attCkName": "窃取或伪造 Kerberos 票据",
          "attCkOrderNo": 24,
          "attCkDescription": "对手可能会试图颠覆Kerberos认证，通过窃取或伪造Kerberos票据来实现“票据传递”（Pass the Ticket）。Kerberos是一种广泛用于现代Windows域环境的认证协议。在Kerberos环境（称为“领域”）中，主要有三个参与者：客户端、服务和密钥分发中心（KDC）。客户端请求访问服务，并通过从KDC发出的Kerberos票据交换，成功认证后获得访问权限。KDC负责认证和票据授予。对手可能通过窃取或伪造票据来滥用Kerberos，从而实现未授权访问。\n\n在Windows系统上，内置的klist工具可以用于列出和分析缓存的Kerberos票据。\n\n在Active Directory域上的Linux系统中，Kerberos凭据本地存储在称为“ccache”的凭据缓存文件中。这些凭据在有效时以及用户会话持续期间保留在ccache文件中。在现代的Redhat Enterprise Linux系统及其衍生发行版中，系统安全服务守护进程（SSSD）处理Kerberos票据。默认情况下，SSSD维护一份可以在/var/lib/sss/secrets/secrets.ldb找到的票据数据库的副本，以及相应的密钥，位于/var/lib/sss/secrets/.secrets.mkey。这两个文件都需要root访问权限。如果对手能够访问数据库和密钥，则可以提取凭据缓存Kerberos blob并将其转换为可用于“票据传递”的Kerberos ccache文件。该ccache文件还可以使用诸如Kekeo的工具转换为Windows格式。\n\n在macOS上，Kerberos票据以标准ccache格式存储，类似于Linux。默认情况下，这些ccache条目的访问通过KCM守护进程通过Mach RPC协议进行联合，该协议使用调用者的环境来确定访问权限。这些ccache条目的存储位置受/etc/krb5.conf配置文件和KRB5CCNAME环境变量的影响，后者可以指定将其保存到磁盘或通过KCM守护进程进行保护。用户可以使用kinit、klist、ktutil和kcc内置二进制文件或通过Apple的原生Kerberos框架与票据存储进行交互。对手可以使用开源工具直接与ccache文件交互，或使用Kerberos框架调用底层API提取用户的TGT或服务票据。",
          "defendId": "D3-RIC",
          "defendName": "Reissue Credential",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1110",
          "attCkName": "暴力破解",
          "attCkOrderNo": 26,
          "attCkDescription": "对手可能会使用暴力破解技术在密码未知或获得密码哈希时获取账户访问权限。当对账户或账户组的密码缺乏了解时，对手可能会使用重复或迭代机制系统性地猜测密码。暴力破解密码可以通过与验证凭据的服务交互进行，或者在离线状态下针对之前获得的凭据数据（如密码哈希）进行。\n\n暴力破解凭据可能在攻击过程中不同阶段进行。例如，对手可能会利用从其他后续行为（如操作系统凭据转储、账户发现或密码策略发现）中获得的知识，尝试暴力破解对有效账户的访问。此外，对手可能会将暴力破解活动与诸如外部远程服务等行为结合，以作为初始访问的一部分。\n",
          "defendId": "D3-CAA",
          "defendName": "Connection Attempt Analysis",
          "defendExecutionDesc": "通过多种方式进行连接尝试分析。"
        },
        {
          "attCkId": "T1111",
          "attCkName": "多重身份验证拦截",
          "attCkOrderNo": 27,
          "attCkDescription": "对手可能会针对多因素认证（MFA）机制（例如智能卡、令牌生成器等）进行攻击，以获取可用于访问系统、服务和网络资源的凭据。虽然建议使用MFA，这种方法提供了比仅使用用户名和密码更高的安全性，但组织应意识到可能被用于拦截和绕过这些安全机制的技术。\n\n如果使用智能卡进行多因素认证，则对手可能需要使用键盘记录器在正常使用过程中获取与智能卡关联的密码。在插入卡片并获得智能卡密码的情况下，对手可以利用感染的系统代理认证，连接到网络资源。\n\n对手也可能使用键盘记录器类似地针对其他硬件令牌，如RSA SecurID。捕获令牌输入（包括用户的个人识别码）可能提供临时访问权限（即在下一个值更换之前重放一次性密码），并可能使对手能够可靠地预测未来的认证值（假如获得了用于生成附加临时代码的算法和种子值）。\n\n其他MFA方法也可能被对手拦截并用于认证。一次性代码通常通过异带通信（如电子邮件、短信）发送。如果设备和/或服务没有安全保护，则可能易受拦截。服务提供商也可能成为攻击目标；例如，对手可能会攻陷短信服务，以窃取发送到用户手机的MFA代码。",
          "defendId": "D3-HCI",
          "defendName": "Hardware Component Inventory",
          "defendExecutionDesc": "管理员使用各种管理和管理工具查询其架构中计算机组件的外围设备、网络接口卡（NIC）、处理器和内存设备等硬件设备信息。在某些情况下，如果不支持此类查询或无法提供特定的感兴趣信息，管理员还可以通过远程管理工具和系统命令手动或使用脚本收集这些信息。"
        }
      ]
    },
    {
      "attCkId": "TA0007",
      "attCkName": "发现",
      "attCkOrderNo": 9,
      "technology": [
        {
          "attCkId": "T1046",
          "attCkName": "网络服务扫描",
          "attCkOrderNo": 2,
          "attCkDescription": "对手可能会尝试获取远程主机和本地网络基础设施设备上运行的服务列表，包括那些可能容易受到远程软件利用的服务。获取此信息的常见方法包括使用工具进行端口和/或漏洞扫描，这些工具会被引入系统中。\n\n在云环境中，对手可能会尝试发现其他云主机上运行的服务。此外，如果云环境与本地环境相连，对手也可能能够识别在非云系统上运行的服务。\n\n在macOS环境中，对手可能会使用本机的Bonjour应用程序发现网络中其他macOS主机上运行的服务。Bonjour的mDNSResponder守护进程会自动注册并在网络上宣传主机的注册服务。例如，对手可以使用mDNS查询（如dns-sd -B _ssh._tcp .）来查找其他广播ssh服务的系统。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过将网络划分为多个逻辑或物理上的子网，限制内部网络中不同子网之间的直接通信。借助严格的防火墙规则和访问控制策略，只允许经过授权的流量在特定子网之间进行通信，阻止攻击者在入侵某个子网后轻松发现和探测其他网络中的服务。"
        },
        {
          "attCkId": "T1083",
          "attCkName": "文件与目录发现",
          "attCkOrderNo": 15,
          "attCkDescription": "对手可能会枚举文件和目录，或在主机或网络共享的特定位置搜索文件系统中的特定信息。在自动发现过程中，对手可能会利用文件和目录发现的信息来影响后续行为，包括是否完全感染目标和/或尝试特定操作。\n\n许多命令行工具可以用来获取这些信息，例子包括dir、tree、ls、find和locate。自定义工具也可能被用来收集文件和目录信息，并与本地API交互。对手还可能利用网络设备的命令行接口收集文件和目录信息（例如dir、show flash和/或nvram）。\n\n某些文件和目录可能需要提升或特定的用户权限才能访问。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1201",
          "attCkName": "密码策略发现",
          "attCkOrderNo": 35,
          "attCkDescription": "对手可能会试图访问企业网络或云环境中使用的密码策略的详细信息。密码策略是一种强制执行复杂密码的方式，这些密码难以猜测或通过暴力破解来攻破。这些信息可以帮助对手创建常见密码列表并发起字典和/或暴力攻击，遵循该策略（例如，如果最低密码长度要求为8，则不尝试像“pass123”这样的密码；如果锁定设置为6，则不对每个账户尝试超过3-4个密码，以避免锁定账户）。\n\n在Windows、Linux和macOS系统上，密码策略可以通过各种命令行工具进行设置和发现，如net accounts (/domain)、Get-ADDefaultDomainPasswordPolicy、chage -l、cat /etc/pam.d/common-password和pwpolicy getaccountpolicies等。对手还可以利用网络设备的CLI，发现密码策略信息（例如，show aaa、show aaa common-criteria policy all）。\n\n在云环境中，可以使用可用的API来发现密码策略，例如AWS中的GetAccountPasswordPolicy。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "限制普通用户和未经授权的进程访问系统的密码策略配置，确保只有管理员或授权用户能够查看和修改密码策略。结合安全监控工具，检测对密码策略配置的查询行为，并对异常或未经授权的访问请求进行及时告警和响应。"
        },
        {
          "attCkId": "T1082",
          "attCkName": "系统信息发现",
          "attCkOrderNo": 51,
          "attCkDescription": "对手可能会尝试获取有关操作系统和硬件的详细信息，包括版本、补丁、热修复、服务包和架构。在自动化发现过程中，系统信息发现中的信息可以帮助对手塑造后续行为，包括是否完全感染目标和/或尝试特定操作。\n\n例如，可以使用 Systeminfo 工具收集详细的系统信息。如果以特权访问运行，可以通过 macOS 的 systemsetup 配置工具收集系统数据的详细信息。用户级别的对手可以执行 df -aH 命令以获取当前挂载的磁盘及其可用空间。对手还可以利用网络设备的 CLI（命令行接口）来收集详细的系统信息，例如 show version。\n\n基础设施即服务（IaaS）云提供商（如 AWS、GCP 和 Azure）允许通过 API 访问实例和虚拟机的信息。成功的身份验证 API 调用可以返回诸如操作系统平台、特定实例的状态或虚拟机的模型视图等数据。",
          "defendId": "D3-DE",
          "defendName": "Decoy Environment",
          "defendExecutionDesc": "诱饵环境中的系统通常被配置为某些可检测的通信方式没有任何合法的业务用途。任何通过这些方式的通信都应被记录和分析，以发现潜在的妥协指标，从而应对可能针对其他系统的过去或未来的攻击。"
        },
        {
          "attCkId": "T1087",
          "attCkName": "账户发现",
          "attCkOrderNo": 52,
          "attCkDescription": "对手可能会尝试获取系统或被攻陷环境中有效账户、用户名或电子邮件地址的列表。这些信息可以帮助对手确定哪些账户存在，从而为后续行为提供支持，例如暴力破解、鱼叉式网络钓鱼攻击或账户接管（例如，有效账户）。\n\n对手可以使用多种方法来枚举账户，包括滥用现有工具、内置命令，以及可能泄露账户名称和角色或权限的配置错误。\n\n例如，云环境通常提供易于访问的接口来获取用户列表。在主机上，对手可以使用默认的 PowerShell 和其他命令行功能来识别账户。还可以通过搜索被感染系统的文件提取有关电子邮件地址和账户的信息。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "通过访问控制列表、组策略和角色分配等机制，限制对关键账户和目录服务的查询权限。结合日志监控和异常行为检测，及时发现和响应未经授权的账户枚举行为。"
        }
      ]
    },
    {
      "attCkId": "TA0008",
      "attCkName": "横向移动",
      "attCkOrderNo": 10,
      "technology": [
        {
          "attCkId": "T1550",
          "attCkName": "使用备用身份验证材料",
          "attCkOrderNo": 12,
          "attCkDescription": "对手可能会使用替代认证材料，如密码哈希、Kerberos票证和应用程序访问令牌，以便在环境中横向移动并绕过正常的系统访问控制。\n\n认证过程通常需要有效的身份（例如用户名）以及一个或多个认证因素（例如密码、PIN、物理智能卡、令牌生成器等）。替代认证材料是在用户或应用程序成功通过提供有效身份和所需认证因素进行身份验证后，由系统合法生成的。替代认证材料也可能在身份创建过程中生成。\n\n缓存替代认证材料使系统能够验证身份已成功认证，而无需用户重新输入认证因素。由于替代认证必须由系统维护——无论是在内存中还是在磁盘上——因此可能面临通过凭证访问技术被盗的风险。通过窃取替代认证材料，对手能够绕过系统访问控制，认证系统而无需知道明文密码或任何额外的认证因素。",
          "defendId": "D3-DUC",
          "defendName": "Decoy User Credential",
          "defendExecutionDesc": "开发了一种检测分析，用于确定用户何时使用诱饵凭证。防御者可以监控或控制该用户的后续操作。\n凭证可能包括：\n        •        域用户名和密码\n        •        本地系统用户名和密码"
        },
        {
          "attCkId": "T1563",
          "attCkName": "远程服务会话劫持",
          "attCkOrderNo": 13,
          "attCkDescription": "对手可能会控制预先存在的远程服务会话，以便在环境中横向移动。用户可能使用有效凭证登录到专为接受远程连接而设计的服务，如telnet、SSH和RDP。当用户登录到服务时，将建立一个会话，使其能够与该服务保持持续交互。\n\n对手可能劫持这些会话，在远程系统上执行操作。远程服务会话劫持与使用远程服务不同，因为它劫持的是现有会话，而不是使用有效账户创建新会话。",
          "defendId": "D3-NTF",
          "defendName": "Network Traffic Filtering",
          "defendExecutionDesc": null
        },
        {
          "attCkId": "T1021",
          "attCkName": "远程服务",
          "attCkOrderNo": 49,
          "attCkDescription": "对手可能会使用有效帐户登录接受远程连接的服务，例如 telnet、SSH 和 VNC。然后，他们可以以登录用户的身份执行操作。\n\n在企业环境中，服务器和工作站可以组织到域中，域提供集中身份管理，允许用户在整个网络中使用一组凭据登录。如果对手能够获得一组有效的域凭据，他们可以使用如安全外壳（SSH）或远程桌面协议（RDP）等远程访问协议登录到许多不同的机器。\n\n合法应用程序（例如软件部署工具和其他管理程序）可能利用远程服务访问远程主机。例如，macOS 上的 Apple Remote Desktop（ARD）是用于远程管理的本地软件，结合使用多种协议，包括 VNC 用于发送屏幕和控制缓冲区，SSH 用于安全文件传输。对手可以滥用像 ARD 这样的应用程序来获得远程代码执行并进行横向移动。在 10.14 之前的 macOS 版本中，对手可以将 SSH 会话升级为 ARD 会话，从而在无需用户交互的情况下接受 TCC（透明性、同意和控制）提示，获得对数据的访问。",
          "defendId": "D3-UGLPA",
          "defendName": "User Geolocation Logon Pattern Analysis",
          "defendExecutionDesc": "收集每次用户登录尝试的地理位置信息，并用其创建基线用户行为配置文件。然后，将当前的地理位置信息登录数据与用户行为配置文件进行比较。偏离正常模式的登录活动可以帮助识别可能表明远程攻击者使用被盗凭证的情况。例如：\n        •        从用户通常不登录的位置进行的登录\n        •        从企业中没有用户所在的位置进行的登录\n        •        由于自上次来自另一个位置的登录以来经过的时间，无法物理上实现的登录"
        }
      ]
    },
    {
      "attCkId": "TA0009",
      "attCkName": "收集",
      "attCkOrderNo": 11,
      "technology": [
        {
          "attCkId": "T1119",
          "attCkName": "自动收集",
          "attCkOrderNo": 6,
          "attCkDescription": "一旦在系统或网络中建立立足点，对手可能会使用自动化技术收集内部数据。执行此技术的方法可能包括使用命令和脚本解释器，按照特定标准（如文件类型、位置或名称）在特定时间间隔搜索并复制信息。\n\n在基于云的环境中，对手也可能使用云API、数据管道、命令行接口或提取、转换和加载（ETL）服务来自动收集数据。\n\n这种功能也可以集成到远程访问工具中。\n\n该技术可能还结合了其他技术，如文件和目录发现以及横向工具传输，以识别和移动文件，以及云服务仪表板和云存储对象发现，以识别云环境中的资源。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1557",
          "attCkName": "中间人",
          "attCkOrderNo": 9,
          "attCkDescription": "对手可能会尝试通过中间人技术（AiTM）在两个或多个网络设备之间定位自己，以支持后续行为，如网络嗅探、传输数据篡改或重放攻击（凭证访问利用）。通过滥用能够确定网络流量流向的常见网络协议特性（如ARP、DNS、LLMNR等），对手可能迫使设备通过其控制的系统进行通信，从而收集信息或执行其他操作。\n\n例如，对手可能会操纵受害者的DNS设置，以便进行其他恶意活动，如阻止/重定向用户访问合法网站和/或推送额外的恶意软件。对手还可能操纵DNS并利用其位置以拦截用户凭证，包括访问令牌和会话Cookies。降级攻击也可以用来建立AiTM位置，例如通过协商不太安全的、已弃用或更弱的通信协议版本（SSL/TLS）或加密算法。\n\n对手还可以利用AiTM位置监控和/或修改流量，例如在传输数据篡改中。对手可以设置与AiTM相似的位置，以阻止流量流向适当的目的地，可能会削弱防御和/或支持网络拒绝服务攻击。",
          "defendId": "D3-CAA",
          "defendName": "Connection Attempt Analysis",
          "defendExecutionDesc": "通过多种方式进行连接尝试分析。"
        },
        {
          "attCkId": "T1185",
          "attCkName": "浏览器会话劫持",
          "attCkOrderNo": 11,
          "attCkDescription": "对手可能利用浏览器软件中的安全漏洞和固有功能，通过各种浏览器会话劫持技术改变内容、修改用户行为和拦截信息。\n\n一个具体的例子是对手向浏览器注入软件，使其能够继承用户的Cookies、HTTP会话和SSL客户端证书，然后利用浏览器作为进入已认证内网的途径。执行基于浏览器的行为（如枢纽）可能需要特定的进程权限，例如SeDebugPrivilege和/或高完整性/管理员权限。\n\n另一个例子涉及通过设置代理将对手的浏览器流量通过用户的浏览器进行转发，从而重定向网络流量。这不会以任何方式改变用户的流量，且代理连接可以在浏览器关闭后立即断开。对手假定代理注入的浏览器进程的安全上下文。浏览器通常为每个打开的标签创建一个新进程，权限和证书相应地分开。借助这些权限，对手可能能够访问内网中的任何资源，如SharePoint或Webmail，这些资源通过浏览器可访问且浏览器具有足够权限。浏览器枢纽还可能绕过双因素身份验证提供的安全性。",
          "defendId": "D3-PMAD",
          "defendName": "Protocol Metadata Anomaly Detection",
          "defendExecutionDesc": "网络协议元数据首先被实时或事后收集和处理。元数据可能包括数据包头信息或会话相关的信息（例如，请求与响应之间的时间）。然后，基于共享特征将元数据进行分组，并对这些组进行比较。如果某些元数据与其他数据显著不同，则会生成警报，将该网络事件标识为异常。异常活动可能表明存在未经授权的活动。"
        },
        {
          "attCkId": "T1039",
          "attCkName": "共享网络驱动器收集敏感数据",
          "attCkOrderNo": 55,
          "attCkDescription": "对手可能会在他们已入侵的计算机上搜索网络共享，以寻找感兴趣的文件。敏感数据可以通过当前系统访问的共享网络驱动器（如主机共享目录、网络文件服务器等）从远程系统收集，然后在数据泄露之前进行提取。对手可能会使用交互式命令行，并利用 cmd 中的常见功能来收集信息。",
          "defendId": "D3-DNR",
          "defendName": "Decoy Network Resource",
          "defendExecutionDesc": "诱饵网络资源被部署到 Web 应用服务器、网络文件共享或其他基于网络的共享服务中，‘蜜罐’可能提供各种诱饵网络资源。"
        }
      ]
    },
    {
      "attCkId": "TA0011",
      "attCkName": "命令与控制",
      "attCkOrderNo": 12,
      "technology": [
        {
          "attCkId": "T1071",
          "attCkName": "应用层协议",
          "attCkOrderNo": 18,
          "attCkDescription": "对手可能会使用OSI应用层协议进行通信，以避免被检测或网络过滤，从而与现有流量混合。对远程系统的命令以及这些命令的结果通常会嵌入客户端和服务器之间的协议流量中。\n\n对手可能利用多种不同的协议，包括用于网页浏览、文件传输、电子邮件或DNS的协议。对于发生在安全区内部（例如代理或中转节点与其他节点之间）的连接，常用的协议包括SMB、SSH或RDP。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1090",
          "attCkName": "代理",
          "attCkOrderNo": 44,
          "attCkDescription": "对手可能会使用连接代理来引导系统之间的网络流量，或作为网络通信与指挥控制服务器的中介，以避免直接连接到他们的基础设施。许多工具可以实现通过代理或端口重定向的流量重定向，包括 HTRAN、ZXProxy 和 ZXPortMap。这类代理使对手能够管理指挥控制通信，减少同时的出站网络连接数量，提高连接丢失时的弹性，或利用受信任的通信路径来掩饰可疑活动。对手可能还会将多个代理链在一起，以进一步掩盖恶意流量的来源。\n\n此外，对手还可以利用内容分发网络（CDN）中的路由方案来代理指挥控制流量。",
          "defendId": "D3-CAA",
          "defendName": "Connection Attempt Analysis",
          "defendExecutionDesc": "通过多种方式进行连接尝试分析。"
        },
        {
          "attCkId": "T1102",
          "attCkName": "网络服务",
          "attCkOrderNo": 45,
          "attCkDescription": "对手可能会利用现有的合法外部网络服务作为从被攻陷系统传递数据的手段。流行的网站和社交媒体作为指挥控制（C2）机制，可以提供很大的掩护，因为在被攻陷之前，网络中的主机很可能已经在与这些服务通信。使用谷歌或推特等常见服务，使对手更容易隐藏在预期的噪音中。网络服务提供商通常使用 SSL/TLS 加密，为对手提供额外的保护。\n\n使用网络服务还可以防止通过恶意软件二进制分析发现后端 C2 基础设施，同时提高操作的弹性，因为这些基础设施可能会动态变化。",
          "defendId": "D3-PHDURA",
          "defendName": "Per Host Download-Upload Ratio Analysis",
          "defendExecutionDesc": "从元数据中汇总拉取与推送的比例，用于在特定时间段（例如三小时、一天、一周等）内为给定主机建立基线。识别出超过阈值的异常情况将触发警报。"
        },
        {
          "attCkId": "T1095",
          "attCkName": "非应用层协议",
          "attCkOrderNo": 46,
          "attCkDescription": "对手可能会使用 OSI 非应用层协议在主机与指挥控制（C2）服务器之间或在网络内感染主机之间进行通信。可能的协议种类繁多，包括网络层协议（如 ICMP）、传输层协议（如 UDP）、会话层协议（如 SOCKS）以及重定向/隧道协议（如 SOL）。\n\n例如，主机之间的 ICMP 通信就是一种常见方式。由于 ICMP 是互联网协议套件的一部分，所有 IP 兼容的主机都需要实现它。然而，ICMP 的监控不如 TCP 或 UDP 常见，这使得对手能够利用它隐藏通信。",
          "defendId": "D3-CSPP",
          "defendName": "Client-server Payload Profiling",
          "defendExecutionDesc": "请求与响应负载分析：通过对多个客户端到单个服务器的请求和响应负载进行分析，建立其特征的基线。这可能考虑请求/响应的大小、熵、频率和节奏。最后，识别出异常值，因为它们可能表明恶意负载传递和随后的服务器利用。"
        },
        {
          "attCkId": "T1105",
          "attCkName": "工具传输",
          "attCkOrderNo": 47,
          "attCkDescription": "对手可能会将工具或其他文件从外部系统转移到被攻陷的环境中。这些工具或文件可以通过命令和控制通道或其他协议（如 FTP）从外部对手控制的系统复制到受害者网络。一旦存在于受害者网络中，对手还可能在受损环境内的受害设备之间进行工具传输（即横向工具传输）。\n\n在 Windows 系统上，对手可能使用各种实用程序下载工具，如 copy、finger、certutil，以及 PowerShell 命令，例如 IEX(New-Object Net.WebClient).downloadString() 和 Invoke-WebRequest。在 Linux 和 macOS 系统上，存在多种实用程序，如 curl、scp、sftp、tftp、rsync、finger 和 wget。\n\n对手还可能滥用安装程序和包管理器，如 yum 或 winget，在受害主机上下载工具。此外，对手还利用文件应用程序功能，例如 Windows 的 search-ms 协议处理程序，通过用户执行的远程文件搜索将恶意文件交付给受害者，通常是在与钓鱼诱饵互动后。\n\n文件还可以使用各种 Web 服务以及受害系统上本地或其他现有的工具进行传输。在某些情况下，对手可能能够利用在 Web 客户端和本地客户端之间同步的服务，如 Dropbox 或 OneDrive，将文件传输到受害系统。例如，通过破坏云账户并登录到服务的 Web 门户，对手可以触发自动同步过程，将文件转移到受害者的机器上。",
          "defendId": "D3-CSPP",
          "defendName": "Client-server Payload Profiling",
          "defendExecutionDesc": "请求与响应负载分析：通过对多个客户端到单个服务器的请求和响应负载进行分析，建立其特征的基线。这可能考虑请求/响应的大小、熵、频率和节奏。最后，识别出异常值，因为它们可能表明恶意负载传递和随后的服务器利用。"
        }
      ]
    },
    {
      "attCkId": "TA0010",
      "attCkName": "窃取数据",
      "attCkOrderNo": 13,
      "technology": [
        {
          "attCkId": "T1041",
          "attCkName": "通过 C2 通道渗漏",
          "attCkOrderNo": 56,
          "attCkDescription": "对手可能通过现有的命令与控制通道窃取数据。被盗数据会被编码到正常的通信通道中，使用与命令与控制通信相同的协议。这种方法有助于掩盖数据泄露，降低被检测的风险。",
          "defendId": "D3-PHDURA",
          "defendName": "Per Host Download-Upload Ratio Analysis",
          "defendExecutionDesc": "从元数据中汇总拉取与推送的比例，用于在特定时间段（例如三小时、一天、一周等）内为给定主机建立基线。识别出超过阈值的异常情况将触发警报。"
        },
        {
          "attCkId": "T1048",
          "attCkName": "通过替代协议进行渗透",
          "attCkOrderNo": 57,
          "attCkDescription": "对手可能通过不同于现有命令与控制通道的协议窃取数据。被窃取的数据可以发送到与主要命令与控制服务器不同的网络位置。\n\n替代协议包括FTP、SMTP、HTTP/S、DNS、SMB或任何其他未作为主要命令与控制通道使用的网络协议。对手可能还会选择对这些替代通道进行加密和/或混淆。\n\n通过替代协议进行数据窃取可以使用各种常见的操作系统工具，例如Net/SMB或FTP。在macOS和Linux上，curl可以用来调用HTTP/S或FTP/S等协议，从系统中提取数据。\n\n许多IaaS和SaaS平台（如Microsoft Exchange、Microsoft SharePoint、GitHub和AWS S3）支持通过Web控制台或云API直接下载文件、电子邮件、源代码和其他敏感信息。",
          "defendId": "D3-DF",
          "defendName": "Decoy File",
          "defendExecutionDesc": "诱饵文件作为本地或网络资源提供。对这些文件的访问可能会被监控。这些文件可以是配置文件、文档、可执行文件或其他类型的文件。"
        },
        {
          "attCkId": "T1030",
          "attCkName": "数据传输大小限制",
          "attCkOrderNo": 58,
          "attCkDescription": "对手可能会以固定大小的数据块而不是整文件的方式窃取数据，或将数据包大小限制在某个阈值以下。这种方法可以避免触发网络数据传输阈值警报，从而降低被检测的风险。通过分块传输，数据流看起来更像是正常的网络活动，从而帮助对手隐蔽其恶意行为。",
          "defendId": "D3-PMAD",
          "defendName": "Protocol Metadata Anomaly Detection",
          "defendExecutionDesc": "网络协议元数据首先被实时或事后收集和处理。元数据可能包括数据包头信息或会话相关的信息（例如，请求与响应之间的时间）。然后，基于共享特征将元数据进行分组，并对这些组进行比较。如果某些元数据与其他数据显著不同，则会生成警报，将该网络事件标识为异常。异常活动可能表明存在未经授权的活动。"
        }
      ]
    },
    {
      "attCkId": "TA0040",
      "attCkName": "危害",
      "attCkOrderNo": 14,
      "technology": [
        {
          "attCkId": "T1486",
          "attCkName": "数据加密以提高影响力",
          "attCkOrderNo": 59,
          "attCkDescription": "对手可能会在目标系统或网络中的大量系统上加密数据，以中断系统和网络资源的可用性。他们可以通过加密本地和远程驱动器上的文件或数据，使存储的数据无法访问，并保留解密密钥以获取经济补偿（如勒索软件）或使数据永久不可访问。如果密钥未保存或未传输，数据将无法恢复。在勒索软件的情况下，常见的用户文件如Office文档、PDF、图像和视频等将被加密，并可能重命名或打上特定标记。对手可能需要先修改文件和目录权限或执行系统关机/重启，以获得对这些文件的访问权限。为了最大化对目标组织的影响，设计用于加密数据的恶意软件可能具有蠕虫特征，通过利用其他攻击技术在网络中传播。",
          "defendId": "",
          "defendName": "",
          "defendExecutionDesc": "定期执行数据备份并确保备份存储在隔离的环境中（如离线备份或云端受保护存储），防止备份数据受到加密攻击的影响。通过多层次的备份策略（本地、远程、离线），确保即使数据被恶意加密或勒索软件攻击，仍可以迅速恢复业务关键数据。"
        },
        {
          "attCkId": "T1565",
          "attCkName": "篡改数据",
          "attCkOrderNo": 60,
          "attCkDescription": "对手可能会插入、删除或操纵数据，以影响外部结果或掩盖活动，从而威胁数据的完整性。通过操纵数据，对手可能试图影响业务流程、组织理解或决策。\n\n数据修改的类型及其影响取决于目标应用程序和流程，以及对手的目标和目的。对于复杂系统，对手通常需要特定的专业知识，并可能需要访问与系统相关的专业软件，这通常是通过长期的信息收集活动获得的，以实现预期的影响。",
          "defendId": "D3-RTSD",
          "defendName": "Remote Terminal Session Detection",
          "defendExecutionDesc": "外部攻击者远程控制公司或组织网络内的主机，并手动指挥攻击技术。在此技术中，会分析非标准的终端会话和异常行为。异常行为检测包括对实时会话中的用户输入模式、键盘输出和数据包检查的分析。"
        },
        {
          "attCkId": "T1498",
          "attCkName": "网络拒绝服务",
          "attCkOrderNo": 61,
          "attCkDescription": "对手可能会执行网络拒绝服务（DoS）攻击，以降低或阻止用户对目标资源的可用性。网络DoS攻击可以通过耗尽网络带宽来实现，目标资源包括特定网站、电子邮件服务、DNS和基于网络的应用程序。对手被观察到进行网络DoS攻击以实现政治目的，以及支持其他恶意活动，如干扰、黑客行为和敲诈。\n\n网络DoS发生在由于恶意流量的数量，导致系统与网络连接的带宽容量被耗尽。例如，对手可能向一个拥有1Gbps互联网连接的服务器发送10Gbps的流量。这种流量可以由单个系统或分布在互联网上的多个系统生成，通常称为分布式拒绝服务（DDoS）。\n\n执行网络DoS攻击的多种方法涉及多个方面，包括IP地址欺骗和僵尸网络。对手可能使用攻击系统的原始IP地址，或伪造源IP地址，使攻击流量更难追溯到攻击系统，或启用反射。这可以增加防御者抵御攻击的难度，降低或消除通过源地址过滤的有效性。",
          "defendId": "D3-RTSD",
          "defendName": "Remote Terminal Session Detection",
          "defendExecutionDesc": "外部攻击者远程控制公司或组织网络内的主机，并手动指挥攻击技术。在此技术中，会分析非标准的终端会话和异常行为。异常行为检测包括对实时会话中的用户输入模式、键盘输出和数据包检查的分析。"
        }
      ]
    }
  ],
  "errorId": null,
  "errorDetail": null
}
